name: Integration test
on:
  - push
  - pull_request

jobs:
  test:
    name: Run tests
    runs-on: 'ubuntu-24.04'
    strategy:
      fail-fast: false
      matrix:
        drupal-version:
          - "^10"
          - "^11"
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: build-drupal-wasm

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Update composer
        run: composer --verbose self-update --2

      - name: Dump composer version
        run: composer --version

      - name: Install Drupal
        run: |
          composer create-project "drupal/recommended-project:${{ matrix.drupal-version }}" drupal
          cd drupal
          # Require our package from the parent folder
          composer config repositories."build-drupal-wasm" --json '{"type":"path","url":"../build-drupal-wasm","options":{"symlink":false}}'
          # Allow our dev things, since a branch or PR will of course always be dev.
          composer config minimum-stability dev
          # We are about to require a plugin as well, so let's allow that
          composer config --no-plugins allow-plugins true
          composer require eiriksm/build-drupal-wasm
          php web/core/scripts/drupal install core/recipes/standard --site-name RecipeBuiltSite
          # drush used for exporting config
          composer require drush/drush
          # Show some info about the site installed
          vendor/bin/drush st
          # Now we can export the config
          vendor/bin/drush config:export -y
          # The permissions are probably too strict on settings.php and the like. Let's fix that.
          chmod -R 777 web/sites/default
          # And we need to merge the composer.json with the one inside the assets in our .github folder.
          php -r '$assetComposerJson=json_decode(file_get_contents("../build-drupal-wasm/.github/assets/composer.json"),TRUE);$composerJson=json_decode(file_get_contents("./composer.json"),TRUE);$scripts=$assetComposerJson["scripts"];$composerJson["scripts"]=$scripts+array_diff_key($composerJson["scripts"]??[],$scripts);file_put_contents("./composer.json",json_encode($composerJson,JSON_PRETTY_PRINT|JSON_FORCE_OBJECT|JSON_UNESCAPED_SLASHES));'
          composer build-drupal-wasm
          # We need this to make sure we wait until the server is up.
          composer require eiriksm/wait-for-listen --dev
          npx serve public&
          ./vendor/bin/wait-for-listen 3000
          curl localhost:3000

      - name: Install dependencies
        run: cd build-drupal-wasm && npm ci
      - name: Install Playwright Browsers
        run: cd build-drupal-wasm && npx playwright install --with-deps
      - name: Run Playwright tests
        run: |
          npx serve drupal/public&
          sleep 5
          cd build-drupal-wasm
          npx playwright test
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-output
          path: build-drupal-wasm/playwright/output
          retention-days: 30